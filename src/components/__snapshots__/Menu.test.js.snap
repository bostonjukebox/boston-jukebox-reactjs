// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders without crashing 1`] = `
ShallowWrapper {
  "complexSelector": ComplexSelector {
    "buildPredicate": [Function],
    "childrenOfNode": [Function],
    "findWhereUnwrapped": [Function],
  },
  "length": 1,
  "node": <styled.section>
    <styled.nav>
        <styled.li>
            <styled.button
                onClick={[Function]}
            >
                suggest a song
            </styled.button>
        </styled.li>
        <styled.li>
            <styled.button
                onClick={[Function]}
            >
                how it works
            </styled.button>
        </styled.li>
        <styled.li>
            <styled.button
                onClick={[Function]}
            >
                credits
            </styled.button>
        </styled.li>
    </styled.nav>
    
    
    
</styled.section>,
  "nodes": Array [
    <styled.section>
      <styled.nav>
            <styled.li>
                  <styled.button
                        onClick={[Function]}
                  >
                        suggest a song
                  </styled.button>
            </styled.li>
            <styled.li>
                  <styled.button
                        onClick={[Function]}
                  >
                        how it works
                  </styled.button>
            </styled.li>
            <styled.li>
                  <styled.button
                        onClick={[Function]}
                  >
                        credits
                  </styled.button>
            </styled.li>
      </styled.nav>
      
      
      
</styled.section>,
  ],
  "options": Object {},
  "renderer": ReactShallowRenderer {
    "_instance": ShallowComponentWrapper {
      "_calledComponentWillUnmount": false,
      "_compositeType": 0,
      "_context": Object {},
      "_currentElement": <Menu />,
      "_debugID": 1,
      "_hostContainerInfo": null,
      "_hostParent": null,
      "_instance": Menu {
        "_reactInternalInstance": [Circular],
        "context": Object {},
        "props": Object {},
        "refs": Object {},
        "state": Object {
          "showModalCredits": false,
          "showModalSuggestion": false,
          "showModalWorks": false,
        },
        "updater": Object {
          "enqueueCallback": [Function],
          "enqueueCallbackInternal": [Function],
          "enqueueElementInternal": [Function],
          "enqueueForceUpdate": [Function],
          "enqueueReplaceState": [Function],
          "enqueueSetState": [Function],
          "isMounted": [Function],
          "validateCallback": [Function],
        },
      },
      "_mountOrder": 1,
      "_pendingCallbacks": null,
      "_pendingElement": null,
      "_pendingForceUpdate": false,
      "_pendingReplaceState": false,
      "_pendingStateQueue": null,
      "_renderedComponent": NoopInternalComponent {
        "_currentElement": <styled.section>
          <styled.nav>
                    <styled.li>
                              <styled.button
                                        onClick={[Function]}
                              >
                                        suggest a song
                              </styled.button>
                    </styled.li>
                    <styled.li>
                              <styled.button
                                        onClick={[Function]}
                              >
                                        how it works
                              </styled.button>
                    </styled.li>
                    <styled.li>
                              <styled.button
                                        onClick={[Function]}
                              >
                                        credits
                              </styled.button>
                    </styled.li>
          </styled.nav>
          
          
          
</styled.section>,
        "_debugID": 2,
        "_renderedOutput": <styled.section>
          <styled.nav>
                    <styled.li>
                              <styled.button
                                        onClick={[Function]}
                              >
                                        suggest a song
                              </styled.button>
                    </styled.li>
                    <styled.li>
                              <styled.button
                                        onClick={[Function]}
                              >
                                        how it works
                              </styled.button>
                    </styled.li>
                    <styled.li>
                              <styled.button
                                        onClick={[Function]}
                              >
                                        credits
                              </styled.button>
                    </styled.li>
          </styled.nav>
          
          
          
</styled.section>,
      },
      "_renderedNodeType": 1,
      "_rootNodeID": 0,
      "_topLevelWrapper": null,
      "_updateBatchNumber": null,
      "_warnedAboutRefsInRender": false,
    },
    "getRenderOutput": [Function],
    "render": [Function],
  },
  "root": [Circular],
  "unrendered": <Menu />,
}
`;
